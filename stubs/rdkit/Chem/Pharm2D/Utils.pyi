from typing import Any

nPointDistDict: Any
nDistPointDict: Any

def GetTriangles(nPts): ...
def BinsTriangleInequality(d1, d2, d3): ...
def ScaffoldPasses(combo, bins: Any | None = ...): ...
def NumCombinations(nItems, nSlots): ...
def CountUpTo(nItems, nSlots, vs, idx: int = ..., startAt: int = ...): ...
def GetIndexCombinations(nItems, nSlots, slot: int = ..., lastItemVal: int = ...): ...
def GetAllCombinations(choices, noDups: int = ..., which: int = ...): ...
def GetUniqueCombinations(choices, classes, which: int = ...): ...
def GetUniqueCombinations_new(choices, classes, which: int = ...): ...
def UniquifyCombinations(combos): ...
def GetPossibleScaffolds(nPts, bins, useTriangleInequality: bool = ...): ...
def OrderTriangle(featIndices, dists): ...
