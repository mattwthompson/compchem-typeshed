from rdkit.sping.pid import *
from . import pdfgen as pdfgen, pdfgeom as pdfgeom, pdfmetrics as pdfmetrics
from math import ceil as ceil
from rdkit.sping import pagesizes as pagesizes
from typing import Any

DEFAULT_PAGE_SIZE: Any
font_face_map: Any
ps_font_map: Any

class PDFCanvas(Canvas):
    pdf: Any
    pagesize: Any
    filename: Any
    drawingsize: Any
    pageTransitionString: str
    pageNumber: int
    def __init__(self, size: Any | None = ..., name: str = ..., pagesize=...) -> None: ...
    defaultFont: Any
    defaultLineColor: Any
    defaultFillColor: Any
    defaultLineWidth: Any
    def showPage(self) -> None: ...
    def isInteractive(self): ...
    def canUpdate(self): ...
    def clear(self) -> None: ...
    def flush(self) -> None: ...
    def save(self, file: Any | None = ..., format: Any | None = ...) -> None: ...
    def setInfoLine(self, s) -> None: ...
    def __setattr__(self, key, value) -> None: ...
    def resetDefaults(self) -> None: ...
    def stringWidth(self, s, font: Any | None = ...): ...
    def fontHeight(self, font: Any | None = ...): ...
    def fontAscent(self, font: Any | None = ...): ...
    def fontDescent(self, font: Any | None = ...): ...
    def drawLine(self, x1, y1, x2, y2, color: Any | None = ..., width: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawLines(self, lineList, color: Any | None = ..., width: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawString(self, s, x, y, font: Any | None = ..., color: Any | None = ..., angle: int = ..., **kwargs) -> None: ...
    def drawCurve(self, x1, y1, x2, y2, x3, y3, x4, y4, edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., closed: int = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawRect(self, x1, y1, x2, y2, edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawEllipse(self, x1, y1, x2, y2, edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawArc(self, x1, y1, x2, y2, startAng: int = ..., extent: int = ..., edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawPolygon(self, pointlist, edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., closed: int = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawImage(self, image, x1, y1, x2: Any | None = ..., y2: Any | None = ..., **kwargs) -> None: ...
    def drawLiteral(self, literal) -> None: ...

def test(): ...
