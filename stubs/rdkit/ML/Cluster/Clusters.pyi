from typing import Any

def cmp(t1, t2): ...

CMPTOL: float

class Cluster:
    metric: Any
    children: Any
    pos: Any
    index: Any
    name: Any
    data: Any
    def __init__(self, metric: float = ..., children: Any | None = ..., position: Any | None = ..., index: int = ..., name: Any | None = ..., data: Any | None = ...) -> None: ...
    def SetMetric(self, metric) -> None: ...
    def GetMetric(self): ...
    def SetIndex(self, index) -> None: ...
    def GetIndex(self): ...
    def SetPosition(self, pos) -> None: ...
    def GetPosition(self): ...
    def GetPointsPositions(self): ...
    def GetPoints(self): ...
    def FindSubtree(self, index): ...
    def AddChild(self, child) -> None: ...
    def AddChildren(self, children) -> None: ...
    def RemoveChild(self, child) -> None: ...
    def GetChildren(self): ...
    def SetData(self, data) -> None: ...
    def GetData(self): ...
    def SetName(self, name) -> None: ...
    def GetName(self): ...
    def Print(self, level: int = ..., showData: int = ..., offset: str = ...) -> None: ...
    def Compare(self, other, ignoreExtras: int = ...): ...
    def IsTerminal(self): ...
    def __len__(self): ...
    def __cmp__(self, other): ...
