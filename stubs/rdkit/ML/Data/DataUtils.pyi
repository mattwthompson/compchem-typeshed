from rdkit.DataStructs import BitUtils as BitUtils
from rdkit.ML.Data import MLData as MLData
from rdkit.utils import fileutils as fileutils
from typing import Any

def permutation(nToDo): ...
def WriteData(outFile, varNames, qBounds, examples) -> None: ...
def ReadVars(inFile): ...
def ReadQuantExamples(inFile): ...
def ReadGeneralExamples(inFile): ...
def BuildQuantDataSet(fileName): ...
def BuildDataSet(fileName): ...
def CalcNPossibleUsingMap(data, order, qBounds, nQBounds: Any | None = ..., silent: bool = ...): ...
def WritePickledData(outName, data) -> None: ...
def TakeEnsemble(vect, ensembleIds, isDataVect: bool = ...): ...
def DBToData(dbName, tableName, user: str = ..., password: str = ..., dupCol: int = ..., what: str = ..., where: str = ..., join: str = ..., pickleCol: int = ..., pickleClass: Any | None = ..., ensembleIds: Any | None = ...): ...
def TextToData(reader, ignoreCols=..., onlyCols: Any | None = ...): ...
def TextFileToData(fName, onlyCols: Any | None = ...): ...
def InitRandomNumbers(seed) -> None: ...
def FilterData(inData, val, frac, col: int = ..., indicesToUse: Any | None = ..., indicesOnly: int = ...): ...
def CountResults(inData, col: int = ..., bounds: Any | None = ...): ...
def RandomizeActivities(dataSet, shuffle: int = ..., runDetails: Any | None = ...) -> None: ...
