from rdkit.sping.colors import *
from typing import Any

__version_maj_number__: str
__version_min_number__: str
inch: int
cm: Any

class StateSaver:
    canvas: Any
    defaultLineColor: Any
    defaultFillColor: Any
    defaultLineWidth: Any
    defaultFont: Any
    def __init__(self, canvas) -> None: ...
    def __del__(self) -> None: ...

class Font:
    def __init__(self, size: int = ..., bold: int = ..., italic: int = ..., underline: int = ..., face: Any | None = ...) -> None: ...
    def __cmp__(self, other): ...
    def __setattr__(self, name, value) -> None: ...

figureLine: int
figureArc: int
figureCurve: int
keyBksp: str
keyDel: str
keyLeft: str
keyRight: str
keyUp: str
keyDown: str
keyPgUp: str
keyPgDn: str
keyHome: str
keyEnd: str
keyClear: str
keyTab: str
modShift: int
modControl: int

class Canvas:
    defaultLineColor: Any
    defaultFillColor: Any
    defaultLineWidth: int
    defaultFont: Any
    onClick: Any
    onOver: Any
    onKey: Any
    def __init__(self, size=..., name: str = ...) -> None: ...
    def getSize(self): ...
    def isInteractive(self): ...
    def canUpdate(self): ...
    def clear(self) -> None: ...
    def flush(self) -> None: ...
    def save(self, file: Any | None = ..., format: Any | None = ...) -> None: ...
    def setInfoLine(self, s) -> None: ...
    def stringBox(self, s, font: Any | None = ...): ...
    def stringWidth(self, s, font: Any | None = ...) -> None: ...
    def fontHeight(self, font: Any | None = ...): ...
    def fontAscent(self, font: Any | None = ...) -> None: ...
    def fontDescent(self, font: Any | None = ...) -> None: ...
    def arcPoints(self, x1, y1, x2, y2, startAng: int = ..., extent: int = ...): ...
    def curvePoints(self, x1, y1, x2, y2, x3, y3, x4, y4): ...
    def drawMultiLineString(self, s, x, y, font: Any | None = ..., color: Any | None = ..., angle: int = ..., **kwargs) -> None: ...
    def drawLine(self, x1, y1, x2, y2, color: Any | None = ..., width: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawLines(self, lineList, color: Any | None = ..., width: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawString(self, s, x, y, font: Any | None = ..., color: Any | None = ..., angle: int = ..., **kwargs) -> None: ...
    def drawCurve(self, x1, y1, x2, y2, x3, y3, x4, y4, edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., closed: int = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawRect(self, x1, y1, x2, y2, edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawRoundRect(self, x1, y1, x2, y2, rx: int = ..., ry: int = ..., edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawEllipse(self, x1, y1, x2, y2, edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawArc(self, x1, y1, x2, y2, startAng: int = ..., extent: int = ..., edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawPolygon(self, pointlist, edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., closed: int = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawFigure(self, partList, edgeColor: Any | None = ..., edgeWidth: Any | None = ..., fillColor: Any | None = ..., closed: int = ..., dash: Any | None = ..., **kwargs) -> None: ...
    def drawImage(self, image, x1, y1, x2: Any | None = ..., y2: Any | None = ..., **kwargs) -> None: ...

def getFileObject(file, openFlags: str = ...): ...

class AffineMatrix:
    A: Any
    def __init__(self, init: Any | None = ...) -> None: ...
    def scale(self, sx, sy) -> None: ...
    def rotate(self, theta) -> None: ...
    def translate(self, tx, ty) -> None: ...
