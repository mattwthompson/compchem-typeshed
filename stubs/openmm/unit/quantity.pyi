from .standard_dimensions import *
from .unit import Unit as Unit, dimensionless as dimensionless, is_unit as is_unit
from typing import Any

class Quantity:
    __array_priority__: int
    unit: Any
    def __init__(self, value: Any | None = ..., unit: Any | None = ...) -> None: ...
    def __copy__(self): ...
    def __deepcopy__(self, memo): ...
    def __getattr__(self, attribute): ...
    def format(self, format_spec): ...
    def __add__(self, other): ...
    def __sub__(self, other): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __lt__(self, other): ...
    def __ge__(self, other): ...
    def __gt__(self, other): ...
    def __le__(self, other): ...
    def __lt__(self, other): ...
    __hash__: Any
    def reduce_unit(self, guide_unit: Any | None = ...): ...
    def __mul__(self, other): ...
    def __rmul__(self, other): ...
    def __truediv__(self, other): ...
    __div__: Any
    def __rtruediv__(self, other): ...
    __rdiv__: Any
    def __pow__(self, exponent): ...
    def sqrt(self): ...
    def sum(self, *args, **kwargs): ...
    def mean(self, *args, **kwargs): ...
    def std(self, *args, **kwargs): ...
    def max(self, *args, **kwargs): ...
    def min(self, *args, **kwargs): ...
    def reshape(self, shape, order: str = ...): ...
    def __abs__(self): ...
    def __pos__(self): ...
    def __neg__(self): ...
    def __nonzero__(self): ...
    def __bool__(self): ...
    def __complex__(self): ...
    def __float__(self): ...
    def __int__(self): ...
    def __long__(self): ...
    def value_in_unit(self, unit): ...
    def value_in_unit_system(self, system): ...
    def in_unit_system(self, system): ...
    def in_units_of(self, other_unit): ...
    def __len__(self): ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, value) -> None: ...
    def __delitem__(self, key) -> None: ...
    def __contains__(self, item): ...
    def __iter__(self): ...
    def count(self, item): ...
    def index(self, item): ...
    def append(self, item): ...
    def extend(self, rhs) -> None: ...
    def insert(self, index, item) -> None: ...
    def remove(self, item) -> None: ...
    def pop(self, *args): ...

def is_quantity(x): ...
def is_dimensionless(x): ...
