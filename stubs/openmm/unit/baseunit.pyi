from collections.abc import Generator
from typing import Any

class BaseUnit:
    __array_priority__: int
    dimension: Any
    name: Any
    symbol: Any
    def __init__(self, base_dim, name, symbol) -> None: ...
    def __lt__(self, other): ...
    def iter_base_dimensions(self) -> Generator[Any, None, None]: ...
    def iter_base_units(self) -> Generator[Any, None, None]: ...
    def get_dimension_tuple(self): ...
    def define_conversion_factor_to(self, other, factor) -> None: ...
    def conversion_factor_to(self, other): ...
